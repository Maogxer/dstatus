name: Deploy Binaries to Pages

on:
  workflow_run:
    workflows: ["Build and Release Binary"]
    types:
      - completed
    branches:
      - main
      - develop
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限
permissions:
  contents: write
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 发布到主分支页面
  deploy-main:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Download neko-status artifacts
        uses: actions/download-artifact@v4
        with:
          name: neko-status-latest
          path: download
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Prepare public directory
        run: |
          mkdir -p public
          
          # 复制二进制文件到public目录
          cp download/neko-status_linux_amd64 public/
          cp download/neko-status_linux_arm64 public/
          cp download/neko-status_linux_arm7 public/
          cp download/neko-status_linux_386 public/
          cp download/neko-status_darwin_amd64 public/
          cp download/neko-status_darwin_arm64 public/
          cp download/neko-status_linux_universal public/neko-status
          cp download/neko-status_darwin_universal public/neko-status_darwin
          cp download/SHA256SUMS public/
          
          # 创建版本信息文件
          echo "$(date +%Y-%m-%d_%H:%M:%S)" > public/version.txt
          
          # 确保文件可执行
          chmod +x public/neko-status*
          
          # 列出文件
          ls -la public/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # 发布到开发分支页面
  deploy-dev:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'develop')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - name: Set up artifact information
        id: artifact-info
        run: |
          echo "Run ID: ${{ github.event.workflow_run.id }}"
          echo "Repository: ${{ github.repository }}"
          echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"
      
      - name: Download neko-status-dev artifacts
        uses: actions/download-artifact@v4
        with:
          name: neko-status-dev-latest
          path: download-dev
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      
      - name: Prepare dev directory
        run: |
          mkdir -p public-dev
          ls -la download-dev || echo "download-dev目录内容列表失败"
          
          # 复制二进制文件到public-dev目录
          cp download-dev/neko-status_linux_amd64 public-dev/ || echo "linux_amd64文件不存在"
          cp download-dev/neko-status_linux_arm64 public-dev/ || echo "linux_arm64文件不存在" 
          cp download-dev/neko-status_linux_arm7 public-dev/ || echo "linux_arm7文件不存在"
          cp download-dev/neko-status_linux_386 public-dev/ || echo "linux_386文件不存在"
          cp download-dev/neko-status_darwin_amd64 public-dev/ || echo "darwin_amd64文件不存在"
          cp download-dev/neko-status_darwin_arm64 public-dev/ || echo "darwin_arm64文件不存在"
          cp download-dev/neko-status_linux_universal public-dev/neko-status || echo "linux_universal文件不存在"
          cp download-dev/neko-status_darwin_universal public-dev/neko-status_darwin || echo "darwin_universal文件不存在"
          cp download-dev/SHA256SUMS public-dev/ || echo "SHA256SUMS文件不存在"
          
          # 创建版本信息文件
          echo "DEV-$(date +%Y-%m-%d_%H:%M:%S)" > public-dev/version.txt
          
          # 确保文件可执行
          find public-dev -type f -name "neko-status*" -exec chmod +x {} \;
          
          # 列出文件
          ls -la public-dev/
      
      - name: Deploy to Dev Folder
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public-dev
          target-folder: dev
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
