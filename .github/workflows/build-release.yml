name: Build and Release Binary

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          # 禁用缓存功能，避免缓存错误
          cache: false
      
      - name: Check directory structure
        run: |
          echo "当前工作目录: $(pwd)"
          echo "仓库根目录文件列表:"
          ls -la
          echo "neko-status目录文件列表:"
          ls -la neko-status/
          echo "查找go.sum文件:"
          find . -name "go.sum"
      
      - name: Install dependencies
        run: |
          cd neko-status
          go mod tidy
          go mod download
      
      - name: Build binaries
        run: |
          cd neko-status
          chmod +x build-ci.sh
          ./build-ci.sh
          
      - name: Generate SHA256 checksums
        run: |
          cd neko-status/build
          sha256sum neko-status_* > SHA256SUMS
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            neko-status/build/neko-status_*
            neko-status/build/SHA256SUMS
          draft: false
          prerelease: false

      # 主分支 - 部署到GitHub Pages
      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v3

      - name: Prepare main branch files for Pages
        if: github.ref == 'refs/heads/main'
        run: |
          # 创建目标目录
          mkdir -p public
          
          # 复制二进制文件
          cp neko-status/build/neko-status_linux_amd64 public/
          cp neko-status/build/neko-status_linux_arm64 public/
          cp neko-status/build/neko-status_linux_arm7 public/
          cp neko-status/build/neko-status_linux_386 public/
          cp neko-status/build/neko-status_darwin_amd64 public/
          cp neko-status/build/neko-status_darwin_arm64 public/
          cp neko-status/build/neko-status_linux_universal public/neko-status
          cp neko-status/build/neko-status_darwin_universal public/neko-status_darwin
          cp neko-status/build/SHA256SUMS public/
          
          # 创建版本信息文件
          echo "$(date +%Y-%m-%d_%H:%M:%S)" > public/version.txt
          
          # 确保文件可执行
          chmod +x public/neko-status*
          
          # 列出文件
          ls -la public/

      - name: Upload main branch files to Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'public'

      - name: Deploy main branch to Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v2

      # 开发分支 - 部署到dev目录
      - name: Prepare develop branch files for Pages
        if: github.ref == 'refs/heads/develop'
        run: |
          # 创建目标目录
          mkdir -p public-dev
          
          # 复制二进制文件
          cp neko-status/build/neko-status_linux_amd64 public-dev/
          cp neko-status/build/neko-status_linux_arm64 public-dev/
          cp neko-status/build/neko-status_linux_arm7 public-dev/
          cp neko-status/build/neko-status_linux_386 public-dev/
          cp neko-status/build/neko-status_darwin_amd64 public-dev/
          cp neko-status/build/neko-status_darwin_arm64 public-dev/
          cp neko-status/build/neko-status_linux_universal public-dev/neko-status
          cp neko-status/build/neko-status_darwin_universal public-dev/neko-status_darwin
          cp neko-status/build/SHA256SUMS public-dev/
          
          # 创建版本信息文件
          echo "DEV-$(date +%Y-%m-%d_%H:%M:%S)" > public-dev/version.txt
          
          # 确保文件可执行
          chmod +x public-dev/neko-status*
          
          # 列出文件
          ls -la public-dev/

      - name: Deploy develop branch to Pages
        if: github.ref == 'refs/heads/develop'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public-dev
          target-folder: dev
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
          
      # 复制到静态目录
      - name: Copy to static directory
        run: |
          cp neko-status/build/neko-status_linux_universal static/neko-status 