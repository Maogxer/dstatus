name: Build and Release

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          # 禁用缓存功能，避免缓存错误
          cache: false
      
      - name: Check directory structure
        run: |
          echo "当前工作目录: $(pwd)"
          echo "仓库根目录文件列表:"
          ls -la
          echo "neko-status目录文件列表:"
          ls -la neko-status/
          echo "查找go.sum文件:"
          find . -name "go.sum"
      
      - name: Install dependencies
        run: |
          cd neko-status
          go mod tidy
          go mod download
      
      - name: Build for ${{ matrix.os }}
        run: |
          cd neko-status
          chmod +x build-ci.sh
          ./build-ci.sh
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: neko-status/build/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    # 仅在推送tag或main/develop分支时运行
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Prepare release files
        run: |
          # 创建发布目录
          mkdir -p release
          # 移动所有构建文件到发布目录
          mv artifacts/binaries-*/* release/
          cd release
          # 生成校验和
          sha256sum neko-status_* > SHA256SUMS
          # 创建版本信息文件
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "DEV-$(date +%Y-%m-%d_%H:%M:%S)" > version.txt
          else
            echo "$(date +%Y-%m-%d_%H:%M:%S)" > version.txt
          fi
          ls -la  # 显示文件列表以便调试
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/*
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Development Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/develop'
        with:
          files: release/*
          name: "Development Build"
          tag_name: "dev-latest"
          prerelease: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Latest Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          files: release/*
          name: "Latest Build"
          tag_name: "latest"
          prerelease: false
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }} 